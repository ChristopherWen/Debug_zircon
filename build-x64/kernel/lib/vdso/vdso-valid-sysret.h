// This file is generated by scripts/gen-vdso-valid-sysret.sh.  DO NOT EDIT.

#include <stdint.h>
#include "vdso-code.h"

struct VDso::ValidSyscallPC {

    static bool futex_wake(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_futex_wake_VIA_zx_futex_wake_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_futex_wake_VIA_zx_futex_wake - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool handle_close(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_handle_close_VIA_zx_futex_wake_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_handle_close_VIA_zx_vmar_unmap_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_handle_close_VIA_zx_handle_close - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_exit(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_exit_VIA_zx_futex_wake_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_thread_exit_VIA_zx_vmar_unmap_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_thread_exit_VIA_zx_thread_exit - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmar_unmap(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmar_unmap_VIA_zx_vmar_unmap_handle_close_thread_exit - VDSO_CODE_START:
            return true;
        case VDSO_CODE_SYSRET_zx_vmar_unmap_VIA_zx_vmar_unmap - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool clock_get(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_clock_get_VIA_zx_clock_get - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool nanosleep(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_nanosleep_VIA_zx_nanosleep - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool clock_adjust(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_clock_adjust_VIA_zx_clock_adjust - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool handle_duplicate(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_handle_duplicate_VIA_zx_handle_duplicate - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool handle_replace(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_handle_replace_VIA_zx_handle_replace - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_wait_one(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_wait_one_VIA_zx_object_wait_one - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_wait_many(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_wait_many_VIA_zx_object_wait_many - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_wait_async(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_wait_async_VIA_zx_object_wait_async - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_signal(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_signal_VIA_zx_object_signal - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_signal_peer(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_signal_peer_VIA_zx_object_signal_peer - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_get_property(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_get_property_VIA_zx_object_get_property - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_set_property(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_set_property_VIA_zx_object_set_property - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_set_cookie(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_set_cookie_VIA_zx_object_set_cookie - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_get_cookie(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_get_cookie_VIA_zx_object_get_cookie - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_get_info(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_get_info_VIA_zx_object_get_info - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_get_child(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_get_child_VIA_zx_object_get_child - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool object_set_profile(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_object_set_profile_VIA_zx_object_set_profile - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_create_VIA_zx_channel_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_read_VIA_zx_channel_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_read_etc(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_read_etc_VIA_zx_channel_read_etc - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_write_VIA_zx_channel_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_call_noretry(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_call_noretry_VIA_zx_channel_call_noretry - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool channel_call_finish(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_channel_call_finish_VIA_zx_channel_call_finish - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool socket_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_socket_create_VIA_zx_socket_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool socket_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_socket_write_VIA_zx_socket_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool socket_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_socket_read_VIA_zx_socket_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool socket_share(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_socket_share_VIA_zx_socket_share - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool socket_accept(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_socket_accept_VIA_zx_socket_accept - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_create_VIA_zx_thread_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_start(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_start_VIA_zx_thread_start - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_read_state(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_read_state_VIA_zx_thread_read_state - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_write_state(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_write_state_VIA_zx_thread_write_state - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool thread_set_priority(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_thread_set_priority_VIA_zx_thread_set_priority - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool process_exit(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_process_exit_VIA_zx_process_exit - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool process_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_process_create_VIA_zx_process_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool process_start(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_process_start_VIA_zx_process_start - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool process_read_memory(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_process_read_memory_VIA_zx_process_read_memory - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool process_write_memory(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_process_write_memory_VIA_zx_process_write_memory - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool job_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_job_create_VIA_zx_job_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool job_set_policy(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_job_set_policy_VIA_zx_job_set_policy - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_bind_exception_port(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_bind_exception_port_VIA_zx_task_bind_exception_port - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_suspend(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_suspend_VIA_zx_task_suspend - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_resume(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_resume_VIA_zx_task_resume - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_suspend_token(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_suspend_token_VIA_zx_task_suspend_token - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_resume_from_exception(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_resume_from_exception_VIA_zx_task_resume_from_exception - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool task_kill(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_task_kill_VIA_zx_task_kill - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool event_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_event_create_VIA_zx_event_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool eventpair_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_eventpair_create_VIA_zx_eventpair_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool futex_wait(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_futex_wait_VIA_zx_futex_wait - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool futex_requeue(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_futex_requeue_VIA_zx_futex_requeue - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool port_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_port_create_VIA_zx_port_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool port_queue(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_port_queue_VIA_zx_port_queue - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool port_wait(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_port_wait_VIA_zx_port_wait - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool port_cancel(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_port_cancel_VIA_zx_port_cancel - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool timer_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_timer_create_VIA_zx_timer_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool timer_set(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_timer_set_VIA_zx_timer_set - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool timer_cancel(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_timer_cancel_VIA_zx_timer_cancel - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_create_VIA_zx_vmo_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_read_VIA_zx_vmo_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_write_VIA_zx_vmo_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_get_size(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_get_size_VIA_zx_vmo_get_size - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_set_size(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_set_size_VIA_zx_vmo_set_size - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_op_range(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_op_range_VIA_zx_vmo_op_range - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_clone(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_clone_VIA_zx_vmo_clone - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_set_cache_policy(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_set_cache_policy_VIA_zx_vmo_set_cache_policy - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmar_allocate(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmar_allocate_VIA_zx_vmar_allocate - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmar_destroy(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmar_destroy_VIA_zx_vmar_destroy - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmar_map(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmar_map_VIA_zx_vmar_map - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmar_protect(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmar_protect_VIA_zx_vmar_protect - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool cprng_draw(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_cprng_draw_VIA_zx_cprng_draw - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool cprng_add_entropy(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_cprng_add_entropy_VIA_zx_cprng_add_entropy - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool fifo_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_fifo_create_VIA_zx_fifo_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool fifo_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_fifo_read_VIA_zx_fifo_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool fifo_read_old(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_fifo_read_old_VIA_zx_fifo_read_old - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool fifo_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_fifo_write_VIA_zx_fifo_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool fifo_write_old(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_fifo_write_old_VIA_zx_fifo_write_old - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool profile_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_profile_create_VIA_zx_profile_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool log_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_log_create_VIA_zx_log_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool log_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_log_write_VIA_zx_log_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool log_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_log_read_VIA_zx_log_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debuglog_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debuglog_create_VIA_zx_debuglog_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debuglog_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debuglog_write_VIA_zx_debuglog_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debuglog_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debuglog_read_VIA_zx_debuglog_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool ktrace_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_ktrace_read_VIA_zx_ktrace_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool ktrace_control(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_ktrace_control_VIA_zx_ktrace_control - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool ktrace_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_ktrace_write_VIA_zx_ktrace_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool mtrace_control(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_mtrace_control_VIA_zx_mtrace_control - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debug_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debug_read_VIA_zx_debug_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debug_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debug_write_VIA_zx_debug_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool debug_send_command(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_debug_send_command_VIA_zx_debug_send_command - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_create_VIA_zx_interrupt_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_bind(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_bind_VIA_zx_interrupt_bind - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_wait(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_wait_VIA_zx_interrupt_wait - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_destroy(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_destroy_VIA_zx_interrupt_destroy - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_ack(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_ack_VIA_zx_interrupt_ack - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool interrupt_trigger(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_interrupt_trigger_VIA_zx_interrupt_trigger - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool mmap_device_io(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_mmap_device_io_VIA_zx_mmap_device_io - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_create_contiguous(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_create_contiguous_VIA_zx_vmo_create_contiguous - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vmo_create_physical(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vmo_create_physical_VIA_zx_vmo_create_physical - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool iommu_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_iommu_create_VIA_zx_iommu_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool bti_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_bti_create_VIA_zx_bti_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool bti_pin(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_bti_pin_VIA_zx_bti_pin - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool bti_release_quarantine(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_bti_release_quarantine_VIA_zx_bti_release_quarantine - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pmt_unpin(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pmt_unpin_VIA_zx_pmt_unpin - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool bootloader_fb_get_info(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_bootloader_fb_get_info_VIA_zx_bootloader_fb_get_info - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool set_framebuffer(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_set_framebuffer_VIA_zx_set_framebuffer - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool set_framebuffer_vmo(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_set_framebuffer_vmo_VIA_zx_set_framebuffer_vmo - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_get_nth_device(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_get_nth_device_VIA_zx_pci_get_nth_device - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_enable_bus_master(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_enable_bus_master_VIA_zx_pci_enable_bus_master - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_reset_device(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_reset_device_VIA_zx_pci_reset_device - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_config_read(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_config_read_VIA_zx_pci_config_read - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_config_write(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_config_write_VIA_zx_pci_config_write - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_cfg_pio_rw(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_cfg_pio_rw_VIA_zx_pci_cfg_pio_rw - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_get_bar(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_get_bar_VIA_zx_pci_get_bar - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_map_interrupt(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_map_interrupt_VIA_zx_pci_map_interrupt - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_query_irq_mode(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_query_irq_mode_VIA_zx_pci_query_irq_mode - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_set_irq_mode(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_set_irq_mode_VIA_zx_pci_set_irq_mode - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_init(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_init_VIA_zx_pci_init - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pci_add_subtract_io_range(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pci_add_subtract_io_range_VIA_zx_pci_add_subtract_io_range - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool pc_firmware_tables(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_pc_firmware_tables_VIA_zx_pc_firmware_tables - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool smc_call(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_smc_call_VIA_zx_smc_call - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool resource_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_resource_create_VIA_zx_resource_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool guest_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_guest_create_VIA_zx_guest_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool guest_set_trap(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_guest_set_trap_VIA_zx_guest_set_trap - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vcpu_create(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vcpu_create_VIA_zx_vcpu_create - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vcpu_resume(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vcpu_resume_VIA_zx_vcpu_resume - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vcpu_interrupt(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vcpu_interrupt_VIA_zx_vcpu_interrupt - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vcpu_read_state(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vcpu_read_state_VIA_zx_vcpu_read_state - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool vcpu_write_state(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_vcpu_write_state_VIA_zx_vcpu_write_state - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool system_mexec(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_system_mexec_VIA_zx_system_mexec - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool system_powerctl(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_system_powerctl_VIA_zx_system_powerctl - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool job_set_relative_importance(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_job_set_relative_importance_VIA_zx_job_set_relative_importance - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_0(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_0_VIA_zx_syscall_test_0 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_1(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_1_VIA_zx_syscall_test_1 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_2(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_2_VIA_zx_syscall_test_2 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_3(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_3_VIA_zx_syscall_test_3 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_4(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_4_VIA_zx_syscall_test_4 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_5(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_5_VIA_zx_syscall_test_5 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_6(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_6_VIA_zx_syscall_test_6 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_7(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_7_VIA_zx_syscall_test_7 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_8(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_8_VIA_zx_syscall_test_8 - VDSO_CODE_START:
            return true;
        }
        return false;
    }

    static bool syscall_test_wrapper(uintptr_t offset) {
        switch (offset) {
        case VDSO_CODE_SYSRET_zx_syscall_test_wrapper_VIA_zx_syscall_test_wrapper - VDSO_CODE_START:
            return true;
        }
        return false;
    }

};
